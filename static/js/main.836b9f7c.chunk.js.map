{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","style","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","statistics","title","statList","map","id","percentage","item","backgroundColor","randomBgColor","Math","floor","random","FriendList","friends","friendList","friend","status","isOnline","width","TransactionHistory","items","transactionHistory","head","type","amount","currency","App","user","statistical","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.836b9f7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"avatar\":\"Profile_avatar__aV4u5\",\"description\":\"Profile_description__2GJPq\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"item\":\"Profile_item__Kyaaw\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1k0Uk\",\"head\":\"TransactionHistory_head__2FiQX\",\"item\":\"TransactionHistory_item__gni6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1lQQU\",\"item\":\"FriendList_item__-lYix\",\"status\":\"FriendList_status__3C5jV\",\"avatar\":\"FriendList_avatar__2fiZr\",\"name\":\"FriendList_name__2fvFO\"};","import style from './Profile.module.css'\nimport PropTypes from 'prop-types';\n\nexport default function Profile({name, tag, location, avatar, stats}){\n    return (\n      <div className={style.profile}>\n        <div className={style.description}>\n          <img src={avatar} alt={tag} className={style.avatar} />\n          <p className={style.name}>{name}</p>\n          <p className={style.tag}>{tag}</p>\n          <p className={style.location}>{location}</p>\n        </div>\n        <ul className={style.stats}>\n          <li>\n            <span className={style.label}>Followers</span>\n            <span className={style.quantity}>{stats.followers}</span>\n          </li>\n          <li>\n            <span className={style.label}>Views</span>\n            <span className={style.quantity}>{stats.views}</span>\n          </li>\n          <li>\n            <span className={style.label}>Likes</span>\n            <span className={style.quantity}>{stats.likes}</span>\n          </li>\n        </ul>\n      </div>\n    );\n};\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  };\n","import style from './Statistics.module.css'\nimport PropTypes from 'prop-types';\n\nexport default function Statistics({stats}){\n    return (\n      <section className={style.statistics}>\n        <h2 className={style.title}>Upload stats</h2>\n\n        <ul className={style.statList}>\n            {stats.map(({id, label, percentage}) => (\n                <li className={style.item} key={id} style={{backgroundColor:randomBgColor()}}>\n                   <span className={style.label}>{label}</span>\n                   <span className={style.percentage}>{percentage}%</span>\n                   </li>\n            ))}\n        </ul>\n      </section>\n    );\n};\n\nfunction randomBgColor() {\n    let r = Math.floor(Math.random() * 256);\n    let g = Math.floor(Math.random() * 256);\n    let b = Math.floor(Math.random() * 256);\n  \n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n};\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        percentage: PropTypes.number.isRequired,\n      }),\n    ),\n};","import style from './FriendList.module.css'\nimport PropTypes from 'prop-types';\n\nexport default function FriendList({friends}){\n    return (\n      <ul className={style.friendList}>\n        {friends.map(friend => (\n          <li className={style.item} key={friend.id}>\n            <span className={style.status} style={{ backgroundColor: friend.isOnline ? 'green' : 'red' }}>{friend.isOnline}</span>\n            <img\n              className={style.avatar}\n              src={friend.avatar}\n              alt=\" \"\n              width=\"48\"\n            />\n            <p className={style.name}>{friend.name}</p>\n          </li>\n         ))}\n      </ul>\n    );\n};\n\nFriendList.propTypes = {\n        friends: PropTypes.shape({\n          id: PropTypes.number.isRequired,\n        }),\n      };\n\n\n","import style from './TransactionHistory.module.css'\nimport PropTypes from 'prop-types';\n\nexport default function TransactionHistory({items}){\n    return (\n      <table className={style.transactionHistory}>\n        <thead className={style.head}>\n          <tr>\n            <th className={style.item}>Type</th>\n            <th className={style.item}>Amount</th>\n            <th className={style.item}>Currency</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {items.map(({id, type, amount, currency}) => (\n            <tr key={id}>\n              <td className={style.item}>{type}</td>\n              <td className={style.item}>{amount}</td>\n              <td className={style.item}>{currency}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n   ","import './App.css';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './data/user.json';\nimport statistical from './data/statistical.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statistical} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}